springdoc:
  swagger-ui:
    enabled: ${SWAGGER_ENABLED}
spring:
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_PRODUCER_SERVERS}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        delivery.timeout.ms: ${KAFKA_DELIVERY_TIMEOUT_MS:20000}
        linger.ms: ${KAFKA_LINGER_MS:0}
        request.timeout.ms: ${KAFKA_REQUEST_TIMEOUT_MS:5000}
        max.in.flight.requests.per.connection: ${KAFKA_MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION:5}
        spring.json.add.type.headers: true
      acks: ${KAFKA_ACKS:all}
      transaction-id-prefix: profiler-service-${random.value}-

    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_CONSUMER_SERVERS}
      group-id: ${KAFKA_CONSUMER_GROUP_ID:profiler-request-events}
      isolation-level: READ_COMMITTED
      auto-offset-reset: latest

      properties:
        spring.json.trusted.packages: by.javaguru.jdmik6.core.event,by.javaguru.jdmik6.core.enums,by.javaguru.jdmik6.core.util.*

kafka:
  cluster:
    partitions: ${KAFKA_CLUSTER_PARTITIONS:3}
    replicas: ${KAFKA_CLUSTER_REPLICAS:3}
    min-insync-replicas: ${KAFKA_CLUSTER_INSYNC_REPLICAS:2}

logging:
  level:
    org:
      springframework:
        kafka:
          transaction.KafkaTransactionManager: ${LOG_KAFKA_TM_LEVEL:INFO}
        transaction: ${LOG_KAFKA_TM_LEVEL:INFO}
        orm.jpa.JpaTransactionManager: ${LOG_KAFKA_TM_LEVEL:INFO}
      apache.kafka.clients.producer.internals.TransactionManager: ${LOG_KAFKA_TM_LEVEL:INFO}
    root: ${LOG_ROOT_LEVEL}
